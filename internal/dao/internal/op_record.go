// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// OpRecordDao is the data access object for table tt_op_record.
type OpRecordDao struct {
	table   string          // table is the underlying table name of the DAO.
	group   string          // group is the database configuration group name of current DAO.
	columns OpRecordColumns // columns contains all the column names of Table for convenient usage.
}

// OpRecordColumns defines and stores column names for table tt_op_record.
type OpRecordColumns struct {
	Id          string //
	Username    string //
	Uri         string //
	Method      string //
	Code        string //
	Header      string //
	QueryParams string //
	QueryBody   string //
	CreatedAt   string //
	UpdatedAt   string //
	DeletedAt   string //
}

// opRecordColumns holds the columns for table tt_op_record.
var opRecordColumns = OpRecordColumns{
	Id:          "id",
	Username:    "username",
	Uri:         "uri",
	Method:      "method",
	Code:        "code",
	Header:      "header",
	QueryParams: "query_params",
	QueryBody:   "query_body",
	CreatedAt:   "created_at",
	UpdatedAt:   "updated_at",
	DeletedAt:   "deleted_at",
}

// NewOpRecordDao creates and returns a new DAO object for table data access.
func NewOpRecordDao() *OpRecordDao {
	return &OpRecordDao{
		group:   "default",
		table:   "tt_op_record",
		columns: opRecordColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *OpRecordDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *OpRecordDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *OpRecordDao) Columns() OpRecordColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *OpRecordDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *OpRecordDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *OpRecordDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
