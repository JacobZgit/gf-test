// ==========================================================================
// Code generated by GoFrame CLI tool. DO NOT EDIT.
// ==========================================================================

package internal

import (
	"context"

	"github.com/gogf/gf/v2/database/gdb"
	"github.com/gogf/gf/v2/frame/g"
)

// K8SClusterConfigDao is the data access object for table tt_k8s_cluster_config.
type K8SClusterConfigDao struct {
	table   string                  // table is the underlying table name of the DAO.
	group   string                  // group is the database configuration group name of current DAO.
	columns K8SClusterConfigColumns // columns contains all the column names of Table for convenient usage.
}

// K8SClusterConfigColumns defines and stores column names for table tt_k8s_cluster_config.
type K8SClusterConfigColumns struct {
	Id         string //
	Uuid       string //
	Name       string //
	ApiServer  string //
	Cloud      string // 云商
	CloudId    string // 云商ID
	IsReady    string // kubeconfig是否可用
	RegionId   string //
	IsSync     string // 是否从cmdb同步回来的
	Kubeconfig string //
	Desc       string //
	CreatedAt  string //
	UpdatedAt  string //
	DeletedAt  string //
}

// k8SClusterConfigColumns holds the columns for table tt_k8s_cluster_config.
var k8SClusterConfigColumns = K8SClusterConfigColumns{
	Id:         "id",
	Uuid:       "uuid",
	Name:       "name",
	ApiServer:  "api_server",
	Cloud:      "cloud",
	CloudId:    "cloud_id",
	IsReady:    "is_ready",
	RegionId:   "region_id",
	IsSync:     "is_sync",
	Kubeconfig: "kubeconfig",
	Desc:       "desc",
	CreatedAt:  "created_at",
	UpdatedAt:  "updated_at",
	DeletedAt:  "deleted_at",
}

// NewK8SClusterConfigDao creates and returns a new DAO object for table data access.
func NewK8SClusterConfigDao() *K8SClusterConfigDao {
	return &K8SClusterConfigDao{
		group:   "default",
		table:   "tt_k8s_cluster_config",
		columns: k8SClusterConfigColumns,
	}
}

// DB retrieves and returns the underlying raw database management object of current DAO.
func (dao *K8SClusterConfigDao) DB() gdb.DB {
	return g.DB(dao.group)
}

// Table returns the table name of current dao.
func (dao *K8SClusterConfigDao) Table() string {
	return dao.table
}

// Columns returns all column names of current dao.
func (dao *K8SClusterConfigDao) Columns() K8SClusterConfigColumns {
	return dao.columns
}

// Group returns the configuration group name of database of current dao.
func (dao *K8SClusterConfigDao) Group() string {
	return dao.group
}

// Ctx creates and returns the Model for current DAO, It automatically sets the context for current operation.
func (dao *K8SClusterConfigDao) Ctx(ctx context.Context) *gdb.Model {
	return dao.DB().Model(dao.table).Safe().Ctx(ctx)
}

// Transaction wraps the transaction logic using function f.
// It rollbacks the transaction and returns the error from function f if it returns non-nil error.
// It commits the transaction and returns nil if function f returns nil.
//
// Note that, you should not Commit or Rollback the transaction in function f
// as it is automatically handled by this function.
func (dao *K8SClusterConfigDao) Transaction(ctx context.Context, f func(ctx context.Context, tx *gdb.TX) error) (err error) {
	return dao.Ctx(ctx).Transaction(ctx, f)
}
